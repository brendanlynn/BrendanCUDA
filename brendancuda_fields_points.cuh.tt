<# int[] bitCounts = {32, 64}; #>
#pragma once

#include <cuda_runtime.h>
#include <cstdint>
#include "brendancuda_fixedvectors.cuh"

namespace BrendanCUDA {
    namespace Fields {
<# foreach (int coordBitCount in bitCounts) { #>
<# foreach (int indexBitCount in bitCounts) { #>
<# for (int i = 2; i <= 4; ++i) { #>
        __host__ __device__ uint<#= indexBitCount #>_t Coordinates<#= coordBitCount #>_<#= i #>ToIndex<#= indexBitCount #>_RM(uint<#= coordBitCount #>_<#= i #> Dimensions, uint<#= coordBitCount #>_<#= i #> Coordinates);
        __host__ __device__ uint<#= coordBitCount #>_<#= i #> Index<#= indexBitCount #>ToCoordinates<#= coordBitCount #>_<#= i #>_RM(uint<#= coordBitCount #>_<#= i #> Dimensions, uint<#= indexBitCount #>_t Index);
        __host__ __device__ uint<#= indexBitCount #>_t Coordinates<#= coordBitCount #>_<#= i #>ToIndex<#= indexBitCount #>_CM(uint<#= coordBitCount #>_<#= i #> Dimensions, uint<#= coordBitCount #>_<#= i #> Coordinates);
        __host__ __device__ uint<#= coordBitCount #>_<#= i #> Index<#= indexBitCount #>ToCoordinates<#= coordBitCount #>_<#= i #>_CM(uint<#= coordBitCount #>_<#= i #> Dimensions, uint<#= indexBitCount #>_t Index);
<# } } } #>
    }
}