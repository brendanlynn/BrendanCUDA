#include "brendancuda_random_devicerandom.cuh"

__device__ BrendanCUDA::DeviceRandom::DeviceRandom(uint64_t Seed) {
    constexpr uint64_t ma0_0 = 13022122549310882779ui64;
    constexpr uint64_t mu0_0 = 10936551063276595493ui64;
    constexpr int32_t rs0_0 = 61;
    constexpr uint64_t ma1_0 = 3811489560640077426ui64;
    constexpr uint64_t mu1_0 = 9312883047901371248ui64;
    constexpr int32_t rs1_0 = 28;
    constexpr uint64_t ma2_0 = 15549872264981369262ui64;
    constexpr uint64_t mu2_0 = 11354611565873020188ui64;
    constexpr int32_t rs2_0 = 15;
    constexpr uint64_t ma3_0 = 15709777207675087416ui64;
    constexpr uint64_t mu3_0 = 320352608110157295ui64;
    constexpr int32_t rs3_0 = 44;
    constexpr uint64_t ma4_0 = 16597439828727690102ui64;
    constexpr uint64_t mu4_0 = 11256818202251480101ui64;
    constexpr int32_t rs4_0 = 46;
    constexpr uint64_t ma5_0 = 11207175825646889305ui64;
    constexpr uint64_t mu5_0 = 9952344311339695192ui64;
    constexpr int32_t rs5_0 = 50;
    constexpr uint64_t ma6_0 = 10896255937711058199ui64;
    constexpr uint64_t mu6_0 = 10119330329703293289ui64;
    constexpr int32_t rs6_0 = 4;
    constexpr uint64_t ma7_0 = 6528950955376041752ui64;
    constexpr uint64_t mu7_0 = 6384139374852624576ui64;
    constexpr int32_t rs7_0 = 37;
    constexpr uint64_t ma8_0 = 8019264257687535797ui64;
    constexpr uint64_t mu8_0 = 12487954657013419619ui64;
    constexpr int32_t rs8_0 = 28;
    constexpr uint64_t ma9_0 = 7975816480523113966ui64;
    constexpr uint64_t mu9_0 = 15661064425989657888ui64;
    constexpr int32_t rs9_0 = 42;
    constexpr uint64_t ma0 = 1947202209100325355ui64;
    constexpr uint64_t ma0_1 = 16846631174939421435ui64;
    constexpr uint64_t mu0_1 = 5967854637135704225ui64;
    constexpr int32_t rs0_1 = 27;
    constexpr uint64_t ma1_1 = 17815536703279994921ui64;
    constexpr uint64_t mu1_1 = 6831294179629161233ui64;
    constexpr int32_t rs1_1 = 4;
    constexpr uint64_t ma2_1 = 13584360953997507420ui64;
    constexpr uint64_t mu2_1 = 16489336555381063242ui64;
    constexpr int32_t rs2_1 = 34;
    constexpr uint64_t ma3_1 = 16110372987640735205ui64;
    constexpr uint64_t mu3_1 = 9642004184443130801ui64;
    constexpr int32_t rs3_1 = 17;
    constexpr uint64_t ma4_1 = 13799880556412728360ui64;
    constexpr uint64_t mu4_1 = 16832762865946650947ui64;
    constexpr int32_t rs4_1 = 51;
    constexpr uint64_t ma5_1 = 5598003858486696336ui64;
    constexpr uint64_t mu5_1 = 5663561063818596397ui64;
    constexpr int32_t rs5_1 = 26;
    constexpr uint64_t ma6_1 = 7464693352560849255ui64;
    constexpr uint64_t mu6_1 = 5567392480431549270ui64;
    constexpr int32_t rs6_1 = 2;
    constexpr uint64_t ma7_1 = 11530822509277053406ui64;
    constexpr uint64_t mu7_1 = 6251638083602862813ui64;
    constexpr int32_t rs7_1 = 47;
    constexpr uint64_t ma8_1 = 14073825514628918718ui64;
    constexpr uint64_t mu8_1 = 3426479304151363901ui64;
    constexpr int32_t rs8_1 = 23;
    constexpr uint64_t ma9_1 = 1682710994186596344ui64;
    constexpr uint64_t mu9_1 = 15873056012666812510ui64;
    constexpr int32_t rs9_1 = 51;
    constexpr uint64_t ma1 = 17354762747531299755ui64;
    constexpr uint64_t ma0_2 = 1431198103046543026ui64;
    constexpr uint64_t mu0_2 = 649300643179077821ui64;
    constexpr int32_t rs0_2 = 63;
    constexpr uint64_t ma1_2 = 17914110256723398563ui64;
    constexpr uint64_t mu1_2 = 12807865471509897493ui64;
    constexpr int32_t rs1_2 = 40;
    constexpr uint64_t ma2_2 = 12647275850415317735ui64;
    constexpr uint64_t mu2_2 = 6856900728791276232ui64;
    constexpr int32_t rs2_2 = 25;
    constexpr uint64_t ma3_2 = 12614898041302629973ui64;
    constexpr uint64_t mu3_2 = 5113819432131274076ui64;
    constexpr int32_t rs3_2 = 15;
    constexpr uint64_t ma4_2 = 2910648073629340984ui64;
    constexpr uint64_t mu4_2 = 6846590608939001849ui64;
    constexpr int32_t rs4_2 = 17;
    constexpr uint64_t ma5_2 = 14602324954929809309ui64;
    constexpr uint64_t mu5_2 = 4935454041136461722ui64;
    constexpr int32_t rs5_2 = 25;
    constexpr uint64_t ma6_2 = 8739673757518951403ui64;
    constexpr uint64_t mu6_2 = 10064515556189849107ui64;
    constexpr int32_t rs6_2 = 2;
    constexpr uint64_t ma7_2 = 6587118275516047242ui64;
    constexpr uint64_t mu7_2 = 5608655115603885237ui64;
    constexpr int32_t rs7_2 = 63;
    constexpr uint64_t ma8_2 = 11680881842754024077ui64;
    constexpr uint64_t mu8_2 = 1220419433302910509ui64;
    constexpr int32_t rs8_2 = 48;
    constexpr uint64_t ma9_2 = 7315803626630524490ui64;
    constexpr uint64_t mu9_2 = 11902081137213638727ui64;
    constexpr int32_t rs9_2 = 38;
    constexpr uint64_t ma2 = 16159248008663947713ui64;
    constexpr uint64_t ma0_3 = 14243919856004876697ui64;
    constexpr uint64_t mu0_3 = 9504265302961781195ui64;
    constexpr int32_t rs0_3 = 27;
    constexpr uint64_t ma1_3 = 15859270255855591293ui64;
    constexpr uint64_t mu1_3 = 618997002469576208ui64;
    constexpr int32_t rs1_3 = 3;
    constexpr uint64_t ma2_3 = 8313940431213646279ui64;
    constexpr uint64_t mu2_3 = 6332985711733343952ui64;
    constexpr int32_t rs2_3 = 9;
    constexpr uint64_t ma3_3 = 16506080989982571387ui64;
    constexpr uint64_t mu3_3 = 8090178544356678988ui64;
    constexpr int32_t rs3_3 = 54;
    constexpr uint64_t ma4_3 = 14250391099588094714ui64;
    constexpr uint64_t mu4_3 = 13976491104023401414ui64;
    constexpr int32_t rs4_3 = 22;
    constexpr uint64_t ma5_3 = 15092045653313284448ui64;
    constexpr uint64_t mu5_3 = 6751253557784670509ui64;
    constexpr int32_t rs5_3 = 34;
    constexpr uint64_t ma6_3 = 3489311449921297653ui64;
    constexpr uint64_t mu6_3 = 2038316963414641186ui64;
    constexpr int32_t rs6_3 = 18;
    constexpr uint64_t ma7_3 = 2505314346449230058ui64;
    constexpr uint64_t mu7_3 = 12438298280836474041ui64;
    constexpr int32_t rs7_3 = 59;
    constexpr uint64_t ma8_3 = 4936513253015903016ui64;
    constexpr uint64_t mu8_3 = 865942447254308726ui64;
    constexpr int32_t rs8_3 = 30;
    constexpr uint64_t ma9_3 = 6129999679583753417ui64;
    constexpr uint64_t mu9_3 = 5940552077537505998ui64;
    constexpr int32_t rs9_3 = 7;
    constexpr uint64_t ma3 = 8048099222013157220ui64;
    constexpr uint64_t ma0_4 = 10595003991045046828ui64;
    constexpr uint64_t mu0_4 = 10143309776104152846ui64;
    constexpr int32_t rs0_4 = 5;
    constexpr uint64_t ma1_4 = 11798365046728340599ui64;
    constexpr uint64_t mu1_4 = 2444616821963999468ui64;
    constexpr int32_t rs1_4 = 43;
    constexpr uint64_t ma2_4 = 2339435003873658046ui64;
    constexpr uint64_t mu2_4 = 14984695313359652053ui64;
    constexpr int32_t rs2_4 = 36;
    constexpr uint64_t ma3_4 = 10166827566723926139ui64;
    constexpr uint64_t mu3_4 = 8679331056497895549ui64;
    constexpr int32_t rs3_4 = 45;
    constexpr uint64_t ma4_4 = 14553171426883132050ui64;
    constexpr uint64_t mu4_4 = 5828237330015155865ui64;
    constexpr int32_t rs4_4 = 36;
    constexpr uint64_t ma5_4 = 1926348284239032839ui64;
    constexpr uint64_t mu5_4 = 9395312254966608916ui64;
    constexpr int32_t rs5_4 = 63;
    constexpr uint64_t ma6_4 = 14865151192037064038ui64;
    constexpr uint64_t mu6_4 = 14776241511981499471ui64;
    constexpr int32_t rs6_4 = 8;
    constexpr uint64_t ma7_4 = 3832720560547210476ui64;
    constexpr uint64_t mu7_4 = 15964307945629427938ui64;
    constexpr int32_t rs7_4 = 26;
    constexpr uint64_t ma8_4 = 9740831888413311571ui64;
    constexpr uint64_t mu8_4 = 7709783182732094573ui64;
    constexpr int32_t rs8_4 = 49;
    constexpr uint64_t ma9_4 = 6444900070346505762ui64;
    constexpr uint64_t mu9_4 = 6029676185764679237ui64;
    constexpr int32_t rs9_4 = 8;
    constexpr uint64_t ma4 = 6473176440209629368ui64;
    constexpr uint64_t ma0_5 = 11646317494392404634ui64;
    constexpr uint64_t mu0_5 = 1440390268777264960ui64;
    constexpr int32_t rs0_5 = 40;
    constexpr uint64_t ma1_5 = 7445573794610783063ui64;
    constexpr uint64_t mu1_5 = 2957455675787257930ui64;
    constexpr int32_t rs1_5 = 5;
    constexpr uint64_t ma2_5 = 4745320815465365868ui64;
    constexpr uint64_t mu2_5 = 5597333404042604743ui64;
    constexpr int32_t rs2_5 = 41;
    constexpr uint64_t ma3_5 = 9725270225361312996ui64;
    constexpr uint64_t mu3_5 = 4679935308295360659ui64;
    constexpr int32_t rs3_5 = 23;
    constexpr uint64_t ma4_5 = 6372559923272631961ui64;
    constexpr uint64_t mu4_5 = 15494177466527716351ui64;
    constexpr int32_t rs4_5 = 24;
    constexpr uint64_t ma5_5 = 1335530698164765307ui64;
    constexpr uint64_t mu5_5 = 14224524014338669100ui64;
    constexpr int32_t rs5_5 = 5;
    constexpr uint64_t ma6_5 = 3336608587068998568ui64;
    constexpr uint64_t mu6_5 = 9630613065754118434ui64;
    constexpr int32_t rs6_5 = 7;
    constexpr uint64_t ma7_5 = 2035048213208200116ui64;
    constexpr uint64_t mu7_5 = 9643001932937249249ui64;
    constexpr int32_t rs7_5 = 35;
    constexpr uint64_t ma8_5 = 7097169388524679ui64;
    constexpr uint64_t mu8_5 = 14867714548770286658ui64;
    constexpr int32_t rs8_5 = 17;
    constexpr uint64_t ma9_5 = 2999833957735459947ui64;
    constexpr uint64_t mu9_5 = 6775307164807527433ui64;
    constexpr int32_t rs9_5 = 54;
    constexpr uint64_t ma5 = 8679674608577081229ui64;
    constexpr uint64_t ma0_6 = 2298357665287286770ui64;
    constexpr uint64_t mu0_6 = 8331575474389909970ui64;
    //constexpr int32_t rs0_6 = 0;
    constexpr uint64_t ma1_6 = 61055098449140913ui64;
    constexpr uint64_t mu1_6 = 8258007582632734725ui64;
    constexpr int32_t rs1_6 = 16;
    constexpr uint64_t ma2_6 = 7914131839995222512ui64;
    constexpr uint64_t mu2_6 = 7510949497349510703ui64;
    constexpr int32_t rs2_6 = 21;
    constexpr uint64_t ma3_6 = 13359217999019711143ui64;
    constexpr uint64_t mu3_6 = 14367170866455491199ui64;
    constexpr int32_t rs3_6 = 19;
    constexpr uint64_t ma4_6 = 13341866263754167911ui64;
    constexpr uint64_t mu4_6 = 1331416281987328975ui64;
    constexpr int32_t rs4_6 = 59;
    constexpr uint64_t ma5_6 = 14404095682588560694ui64;
    constexpr uint64_t mu5_6 = 1569892631222023428ui64;
    constexpr int32_t rs5_6 = 53;
    constexpr uint64_t ma6_6 = 2963766081453068762ui64;
    constexpr uint64_t mu6_6 = 14840208677878555967ui64;
    constexpr int32_t rs6_6 = 1;
    constexpr uint64_t ma7_6 = 13238701139359108219ui64;
    constexpr uint64_t mu7_6 = 11087002536849861092ui64;
    constexpr int32_t rs7_6 = 56;
    constexpr uint64_t ma8_6 = 13727781126075454341ui64;
    constexpr uint64_t mu8_6 = 8838500084986197020ui64;
    constexpr int32_t rs8_6 = 34;
    constexpr uint64_t ma9_6 = 7004362958896636717ui64;
    constexpr uint64_t mu9_6 = 441767419823707399ui64;
    constexpr int32_t rs9_6 = 5;
    constexpr uint64_t ma6 = 14074317779224903405ui64;
    constexpr uint64_t ma0_7 = 10848010850534315299ui64;
    constexpr uint64_t mu0_7 = 8438282591264985173ui64;
    constexpr int32_t rs0_7 = 16;
    constexpr uint64_t ma1_7 = 8499962883169533203ui64;
    constexpr uint64_t mu1_7 = 15841765536424284520ui64;
    constexpr int32_t rs1_7 = 33;
    constexpr uint64_t ma2_7 = 10981518243766094328ui64;
    constexpr uint64_t mu2_7 = 13393908626995988943ui64;
    constexpr int32_t rs2_7 = 9;
    constexpr uint64_t ma3_7 = 11171108250335555200ui64;
    constexpr uint64_t mu3_7 = 2141276342516353465ui64;
    constexpr int32_t rs3_7 = 13;
    constexpr uint64_t ma4_7 = 5353204243212230054ui64;
    constexpr uint64_t mu4_7 = 7586869058266831778ui64;
    constexpr int32_t rs4_7 = 2;
    constexpr uint64_t ma5_7 = 13525144798903152572ui64;
    constexpr uint64_t mu5_7 = 15038108816124479739ui64;
    constexpr int32_t rs5_7 = 63;
    constexpr uint64_t ma6_7 = 9408651922493338506ui64;
    constexpr uint64_t mu6_7 = 1042727685438276441ui64;
    constexpr int32_t rs6_7 = 12;
    constexpr uint64_t ma7_7 = 666296312775088131ui64;
    constexpr uint64_t mu7_7 = 7011396414954019232ui64;
    constexpr int32_t rs7_7 = 9;
    constexpr uint64_t ma8_7 = 5375102560411487564ui64;
    constexpr uint64_t mu8_7 = 2842040608262570780ui64;
    constexpr int32_t rs8_7 = 7;
    constexpr uint64_t ma9_7 = 16202374719642886347ui64;
    constexpr uint64_t mu9_7 = 16630124850825719646ui64;
    constexpr int32_t rs9_7 = 32;
    constexpr uint64_t ma7 = 16981634876996587122ui64;

    uint64_t t0_0 = (ma0_0 ^ Seed) * mu0_0;
    uint64_t t0_1 = (ma0_1 ^ Seed) * mu0_1;
    uint64_t t0_2 = (ma0_2 ^ Seed) * mu0_2;
    uint64_t t0_3 = (ma0_3 ^ Seed) * mu0_3;
    uint64_t t0_4 = (ma0_4 ^ Seed) * mu0_4;
    uint64_t t0_5 = (ma0_5 ^ Seed) * mu0_5;
    uint64_t t0_6 = (ma0_6 ^ Seed) * mu0_6;
    uint64_t t0_7 = (ma0_7 ^ Seed) * mu0_7;
    uint64_t t1_0 = (ma1_0 ^ blockIdx.x) * mu1_0;
    uint64_t t1_1 = (ma1_1 ^ blockIdx.x) * mu1_1;
    uint64_t t1_2 = (ma1_2 ^ blockIdx.x) * mu1_2;
    uint64_t t1_3 = (ma1_3 ^ blockIdx.x) * mu1_3;
    uint64_t t1_4 = (ma1_4 ^ blockIdx.x) * mu1_4;
    uint64_t t1_5 = (ma1_5 ^ blockIdx.x) * mu1_5;
    uint64_t t1_6 = (ma1_6 ^ blockIdx.x) * mu1_6;
    uint64_t t1_7 = (ma1_7 ^ blockIdx.x) * mu1_7;
    uint64_t t2_0 = (ma2_0 ^ blockIdx.y) * mu2_0;
    uint64_t t2_1 = (ma2_1 ^ blockIdx.y) * mu2_1;
    uint64_t t2_2 = (ma2_2 ^ blockIdx.y) * mu2_2;
    uint64_t t2_3 = (ma2_3 ^ blockIdx.y) * mu2_3;
    uint64_t t2_4 = (ma2_4 ^ blockIdx.y) * mu2_4;
    uint64_t t2_5 = (ma2_5 ^ blockIdx.y) * mu2_5;
    uint64_t t2_6 = (ma2_6 ^ blockIdx.y) * mu2_6;
    uint64_t t2_7 = (ma2_7 ^ blockIdx.y) * mu2_7;
    uint64_t t3_0 = (ma3_0 ^ blockIdx.z) * mu3_0;
    uint64_t t3_1 = (ma3_1 ^ blockIdx.z) * mu3_1;
    uint64_t t3_2 = (ma3_2 ^ blockIdx.z) * mu3_2;
    uint64_t t3_3 = (ma3_3 ^ blockIdx.z) * mu3_3;
    uint64_t t3_4 = (ma3_4 ^ blockIdx.z) * mu3_4;
    uint64_t t3_5 = (ma3_5 ^ blockIdx.z) * mu3_5;
    uint64_t t3_6 = (ma3_6 ^ blockIdx.z) * mu3_6;
    uint64_t t3_7 = (ma3_7 ^ blockIdx.z) * mu3_7;
    uint64_t t4_0 = (ma4_0 ^ blockDim.x) * mu4_0;
    uint64_t t4_1 = (ma4_1 ^ blockDim.x) * mu4_1;
    uint64_t t4_2 = (ma4_2 ^ blockDim.x) * mu4_2;
    uint64_t t4_3 = (ma4_3 ^ blockDim.x) * mu4_3;
    uint64_t t4_4 = (ma4_4 ^ blockDim.x) * mu4_4;
    uint64_t t4_5 = (ma4_5 ^ blockDim.x) * mu4_5;
    uint64_t t4_6 = (ma4_6 ^ blockDim.x) * mu4_6;
    uint64_t t4_7 = (ma4_7 ^ blockDim.x) * mu4_7;
    uint64_t t5_0 = (ma5_0 ^ blockDim.y) * mu5_0;
    uint64_t t5_1 = (ma5_1 ^ blockDim.y) * mu5_1;
    uint64_t t5_2 = (ma5_2 ^ blockDim.y) * mu5_2;
    uint64_t t5_3 = (ma5_3 ^ blockDim.y) * mu5_3;
    uint64_t t5_4 = (ma5_4 ^ blockDim.y) * mu5_4;
    uint64_t t5_5 = (ma5_5 ^ blockDim.y) * mu5_5;
    uint64_t t5_6 = (ma5_6 ^ blockDim.y) * mu5_6;
    uint64_t t5_7 = (ma5_7 ^ blockDim.y) * mu5_7;
    uint64_t t6_0 = (ma6_0 ^ blockDim.z) * mu6_0;
    uint64_t t6_1 = (ma6_1 ^ blockDim.z) * mu6_1;
    uint64_t t6_2 = (ma6_2 ^ blockDim.z) * mu6_2;
    uint64_t t6_3 = (ma6_3 ^ blockDim.z) * mu6_3;
    uint64_t t6_4 = (ma6_4 ^ blockDim.z) * mu6_4;
    uint64_t t6_5 = (ma6_5 ^ blockDim.z) * mu6_5;
    uint64_t t6_6 = (ma6_6 ^ blockDim.z) * mu6_6;
    uint64_t t6_7 = (ma6_7 ^ blockDim.z) * mu6_7;
    uint64_t t7_0 = (ma7_0 ^ threadIdx.x) * mu7_0;
    uint64_t t7_1 = (ma7_1 ^ threadIdx.x) * mu7_1;
    uint64_t t7_2 = (ma7_2 ^ threadIdx.x) * mu7_2;
    uint64_t t7_3 = (ma7_3 ^ threadIdx.x) * mu7_3;
    uint64_t t7_4 = (ma7_4 ^ threadIdx.x) * mu7_4;
    uint64_t t7_5 = (ma7_5 ^ threadIdx.x) * mu7_5;
    uint64_t t7_6 = (ma7_6 ^ threadIdx.x) * mu7_6;
    uint64_t t7_7 = (ma7_7 ^ threadIdx.x) * mu7_7;
    uint64_t t8_0 = (ma8_0 ^ threadIdx.y) * mu8_0;
    uint64_t t8_1 = (ma8_1 ^ threadIdx.y) * mu8_1;
    uint64_t t8_2 = (ma8_2 ^ threadIdx.y) * mu8_2;
    uint64_t t8_3 = (ma8_3 ^ threadIdx.y) * mu8_3;
    uint64_t t8_4 = (ma8_4 ^ threadIdx.y) * mu8_4;
    uint64_t t8_5 = (ma8_5 ^ threadIdx.y) * mu8_5;
    uint64_t t8_6 = (ma8_6 ^ threadIdx.y) * mu8_6;
    uint64_t t8_7 = (ma8_7 ^ threadIdx.y) * mu8_7;
    uint64_t t9_0 = (ma9_0 ^ threadIdx.z) * mu9_0;
    uint64_t t9_1 = (ma9_1 ^ threadIdx.z) * mu9_1;
    uint64_t t9_2 = (ma9_2 ^ threadIdx.z) * mu9_2;
    uint64_t t9_3 = (ma9_3 ^ threadIdx.z) * mu9_3;
    uint64_t t9_4 = (ma9_4 ^ threadIdx.z) * mu9_4;
    uint64_t t9_5 = (ma9_5 ^ threadIdx.z) * mu9_5;
    uint64_t t9_6 = (ma9_6 ^ threadIdx.z) * mu9_6;
    uint64_t t9_7 = (ma9_7 ^ threadIdx.z) * mu9_7;

    t0_0 = ((t0_0 << rs0_0) | (t0_0 >> (64 - rs0_0)));
    t0_1 = ((t0_1 << rs0_1) | (t0_1 >> (64 - rs0_1)));
    t0_2 = ((t0_2 << rs0_2) | (t0_2 >> (64 - rs0_2)));
    t0_3 = ((t0_3 << rs0_3) | (t0_3 >> (64 - rs0_3)));
    t0_4 = ((t0_4 << rs0_4) | (t0_4 >> (64 - rs0_4)));
    t0_5 = ((t0_5 << rs0_5) | (t0_5 >> (64 - rs0_5)));
    //t0_6 = ((t0_6 << rs0_6) | (t0_6 >> (64 - rs0_6)));
    t0_7 = ((t0_7 << rs0_7) | (t0_7 >> (64 - rs0_7)));
    t1_0 = ((t1_0 << rs1_0) | (t1_0 >> (64 - rs1_0)));
    t1_1 = ((t1_1 << rs1_1) | (t1_1 >> (64 - rs1_1)));
    t1_2 = ((t1_2 << rs1_2) | (t1_2 >> (64 - rs1_2)));
    t1_3 = ((t1_3 << rs1_3) | (t1_3 >> (64 - rs1_3)));
    t1_4 = ((t1_4 << rs1_4) | (t1_4 >> (64 - rs1_4)));
    t1_5 = ((t1_5 << rs1_5) | (t1_5 >> (64 - rs1_5)));
    t1_6 = ((t1_6 << rs1_6) | (t1_6 >> (64 - rs1_6)));
    t1_7 = ((t1_7 << rs1_7) | (t1_7 >> (64 - rs1_7)));
    t2_0 = ((t2_0 << rs2_0) | (t2_0 >> (64 - rs2_0)));
    t2_1 = ((t2_1 << rs2_1) | (t2_1 >> (64 - rs2_1)));
    t2_2 = ((t2_2 << rs2_2) | (t2_2 >> (64 - rs2_2)));
    t2_3 = ((t2_3 << rs2_3) | (t2_3 >> (64 - rs2_3)));
    t2_4 = ((t2_4 << rs2_4) | (t2_4 >> (64 - rs2_4)));
    t2_5 = ((t2_5 << rs2_5) | (t2_5 >> (64 - rs2_5)));
    t2_6 = ((t2_6 << rs2_6) | (t2_6 >> (64 - rs2_6)));
    t2_7 = ((t2_7 << rs2_7) | (t2_7 >> (64 - rs2_7)));
    t3_0 = ((t3_0 << rs3_0) | (t3_0 >> (64 - rs3_0)));
    t3_1 = ((t3_1 << rs3_1) | (t3_1 >> (64 - rs3_1)));
    t3_2 = ((t3_2 << rs3_2) | (t3_2 >> (64 - rs3_2)));
    t3_3 = ((t3_3 << rs3_3) | (t3_3 >> (64 - rs3_3)));
    t3_4 = ((t3_4 << rs3_4) | (t3_4 >> (64 - rs3_4)));
    t3_5 = ((t3_5 << rs3_5) | (t3_5 >> (64 - rs3_5)));
    t3_6 = ((t3_6 << rs3_6) | (t3_6 >> (64 - rs3_6)));
    t3_7 = ((t3_7 << rs3_7) | (t3_7 >> (64 - rs3_7)));
    t4_0 = ((t4_0 << rs4_0) | (t4_0 >> (64 - rs4_0)));
    t4_1 = ((t4_1 << rs4_1) | (t4_1 >> (64 - rs4_1)));
    t4_2 = ((t4_2 << rs4_2) | (t4_2 >> (64 - rs4_2)));
    t4_3 = ((t4_3 << rs4_3) | (t4_3 >> (64 - rs4_3)));
    t4_4 = ((t4_4 << rs4_4) | (t4_4 >> (64 - rs4_4)));
    t4_5 = ((t4_5 << rs4_5) | (t4_5 >> (64 - rs4_5)));
    t4_6 = ((t4_6 << rs4_6) | (t4_6 >> (64 - rs4_6)));
    t4_7 = ((t4_7 << rs4_7) | (t4_7 >> (64 - rs4_7)));
    t5_0 = ((t5_0 << rs5_0) | (t5_0 >> (64 - rs5_0)));
    t5_1 = ((t5_1 << rs5_1) | (t5_1 >> (64 - rs5_1)));
    t5_2 = ((t5_2 << rs5_2) | (t5_2 >> (64 - rs5_2)));
    t5_3 = ((t5_3 << rs5_3) | (t5_3 >> (64 - rs5_3)));
    t5_4 = ((t5_4 << rs5_4) | (t5_4 >> (64 - rs5_4)));
    t5_5 = ((t5_5 << rs5_5) | (t5_5 >> (64 - rs5_5)));
    t5_6 = ((t5_6 << rs5_6) | (t5_6 >> (64 - rs5_6)));
    t5_7 = ((t5_7 << rs5_7) | (t5_7 >> (64 - rs5_7)));
    t6_0 = ((t6_0 << rs6_0) | (t6_0 >> (64 - rs6_0)));
    t6_1 = ((t6_1 << rs6_1) | (t6_1 >> (64 - rs6_1)));
    t6_2 = ((t6_2 << rs6_2) | (t6_2 >> (64 - rs6_2)));
    t6_3 = ((t6_3 << rs6_3) | (t6_3 >> (64 - rs6_3)));
    t6_4 = ((t6_4 << rs6_4) | (t6_4 >> (64 - rs6_4)));
    t6_5 = ((t6_5 << rs6_5) | (t6_5 >> (64 - rs6_5)));
    t6_6 = ((t6_6 << rs6_6) | (t6_6 >> (64 - rs6_6)));
    t6_7 = ((t6_7 << rs6_7) | (t6_7 >> (64 - rs6_7)));
    t7_0 = ((t7_0 << rs7_0) | (t7_0 >> (64 - rs7_0)));
    t7_1 = ((t7_1 << rs7_1) | (t7_1 >> (64 - rs7_1)));
    t7_2 = ((t7_2 << rs7_2) | (t7_2 >> (64 - rs7_2)));
    t7_3 = ((t7_3 << rs7_3) | (t7_3 >> (64 - rs7_3)));
    t7_4 = ((t7_4 << rs7_4) | (t7_4 >> (64 - rs7_4)));
    t7_5 = ((t7_5 << rs7_5) | (t7_5 >> (64 - rs7_5)));
    t7_6 = ((t7_6 << rs7_6) | (t7_6 >> (64 - rs7_6)));
    t7_7 = ((t7_7 << rs7_7) | (t7_7 >> (64 - rs7_7)));
    t8_0 = ((t8_0 << rs8_0) | (t8_0 >> (64 - rs8_0)));
    t8_1 = ((t8_1 << rs8_1) | (t8_1 >> (64 - rs8_1)));
    t8_2 = ((t8_2 << rs8_2) | (t8_2 >> (64 - rs8_2)));
    t8_3 = ((t8_3 << rs8_3) | (t8_3 >> (64 - rs8_3)));
    t8_4 = ((t8_4 << rs8_4) | (t8_4 >> (64 - rs8_4)));
    t8_5 = ((t8_5 << rs8_5) | (t8_5 >> (64 - rs8_5)));
    t8_6 = ((t8_6 << rs8_6) | (t8_6 >> (64 - rs8_6)));
    t8_7 = ((t8_7 << rs8_7) | (t8_7 >> (64 - rs8_7)));
    t9_0 = ((t9_0 << rs9_0) | (t9_0 >> (64 - rs9_0)));
    t9_1 = ((t9_1 << rs9_1) | (t9_1 >> (64 - rs9_1)));
    t9_2 = ((t9_2 << rs9_2) | (t9_2 >> (64 - rs9_2)));
    t9_3 = ((t9_3 << rs9_3) | (t9_3 >> (64 - rs9_3)));
    t9_4 = ((t9_4 << rs9_4) | (t9_4 >> (64 - rs9_4)));
    t9_5 = ((t9_5 << rs9_5) | (t9_5 >> (64 - rs9_5)));
    t9_6 = ((t9_6 << rs9_6) | (t9_6 >> (64 - rs9_6)));
    t9_7 = ((t9_7 << rs9_7) | (t9_7 >> (64 - rs9_7)));

    c[0] = t0_0 ^ t1_0 ^ t2_0 ^ t3_0 ^ t4_0 ^ t5_0 ^ t6_0 ^ t7_0 ^ t8_0 ^ t9_0 ^ ma0;
    c[1] = t0_1 ^ t1_1 ^ t2_1 ^ t3_1 ^ t4_1 ^ t5_1 ^ t6_1 ^ t7_1 ^ t8_1 ^ t9_1 ^ ma1;
    c[2] = t0_2 ^ t1_2 ^ t2_2 ^ t3_2 ^ t4_2 ^ t5_2 ^ t6_2 ^ t7_2 ^ t8_2 ^ t9_2 ^ ma2;
    c[3] = t0_3 ^ t1_3 ^ t2_3 ^ t3_3 ^ t4_3 ^ t5_3 ^ t6_3 ^ t7_3 ^ t8_3 ^ t9_3 ^ ma3;
    c[4] = t0_4 ^ t1_4 ^ t2_4 ^ t3_4 ^ t4_4 ^ t5_4 ^ t6_4 ^ t7_4 ^ t8_4 ^ t9_4 ^ ma4;
    c[5] = t0_5 ^ t1_5 ^ t2_5 ^ t3_5 ^ t4_5 ^ t5_5 ^ t6_5 ^ t7_5 ^ t8_5 ^ t9_5 ^ ma5;
    c[6] = t0_6 ^ t1_6 ^ t2_6 ^ t3_6 ^ t4_6 ^ t5_6 ^ t6_6 ^ t7_6 ^ t8_6 ^ t9_6 ^ ma6;
    c[7] = t0_7 ^ t1_7 ^ t2_7 ^ t3_7 ^ t4_7 ^ t5_7 ^ t6_7 ^ t7_7 ^ t8_7 ^ t9_7 ^ ma7;
}

__device__ void BrendanCUDA::DeviceRandom::Iterate() {
    constexpr uint64_t ma0_0 = 11192243585111674152ui64;
    constexpr uint64_t mu0_0 = 10694587987243382108ui64;
    constexpr int32_t rs0_0 = 4;
    constexpr uint64_t ma1_0 = 9335702405906816340ui64;
    constexpr uint64_t mu1_0 = 8155558088585227128ui64;
    constexpr int32_t rs1_0 = 13;
    constexpr uint64_t ma2_0 = 14909372351861653259ui64;
    constexpr uint64_t mu2_0 = 13546557780083399480ui64;
    constexpr int32_t rs2_0 = 32;
    constexpr uint64_t ma3_0 = 9869572141355935028ui64;
    constexpr uint64_t mu3_0 = 5549646253303730747ui64;
    constexpr int32_t rs3_0 = 37;
    constexpr uint64_t ma4_0 = 10211250142323044301ui64;
    constexpr uint64_t mu4_0 = 17946896381209394424ui64;
    constexpr int32_t rs4_0 = 5;
    constexpr uint64_t ma5_0 = 3118734870514812858ui64;
    constexpr uint64_t mu5_0 = 15659238058693712906ui64;
    constexpr int32_t rs5_0 = 54;
    constexpr uint64_t ma6_0 = 17402411067633586863ui64;
    constexpr uint64_t mu6_0 = 16738845323156004660ui64;
    constexpr int32_t rs6_0 = 36;
    constexpr uint64_t ma7_0 = 12380753756289855864ui64;
    constexpr uint64_t mu7_0 = 4038060587418468710ui64;
    constexpr int32_t rs7_0 = 55;
    constexpr uint64_t ma0 = 7005929561618000083ui64;
    constexpr uint64_t ma0_1 = 17967938345776436544ui64;
    constexpr uint64_t mu0_1 = 16116005802998579027ui64;
    constexpr int32_t rs0_1 = 10;
    constexpr uint64_t ma1_1 = 1552095201741070579ui64;
    constexpr uint64_t mu1_1 = 3999992712361122746ui64;
    constexpr int32_t rs1_1 = 61;
    constexpr uint64_t ma2_1 = 11844486589016395901ui64;
    constexpr uint64_t mu2_1 = 748029246193800233ui64;
    constexpr int32_t rs2_1 = 59;
    constexpr uint64_t ma3_1 = 18140458501713907240ui64;
    constexpr uint64_t mu3_1 = 7170992943368938321ui64;
    constexpr int32_t rs3_1 = 20;
    constexpr uint64_t ma4_1 = 1696528781035517166ui64;
    constexpr uint64_t mu4_1 = 2589669007731210595ui64;
    constexpr int32_t rs4_1 = 4;
    constexpr uint64_t ma5_1 = 7781149353570365921ui64;
    constexpr uint64_t mu5_1 = 7120852805183922845ui64;
    constexpr int32_t rs5_1 = 42;
    constexpr uint64_t ma6_1 = 6367502926275577850ui64;
    constexpr uint64_t mu6_1 = 17650789874025667455ui64;
    constexpr int32_t rs6_1 = 61;
    constexpr uint64_t ma7_1 = 8261076360678779978ui64;
    constexpr uint64_t mu7_1 = 8214697730922751963ui64;
    constexpr int32_t rs7_1 = 21;
    constexpr uint64_t ma1 = 9014985448274537417ui64;
    constexpr uint64_t ma0_2 = 10839556304269539647ui64;
    constexpr uint64_t mu0_2 = 15539711689068096971ui64;
    constexpr int32_t rs0_2 = 53;
    constexpr uint64_t ma1_2 = 16813053616355733780ui64;
    constexpr uint64_t mu1_2 = 14549473180007017003ui64;
    constexpr int32_t rs1_2 = 55;
    constexpr uint64_t ma2_2 = 3017364353520035218ui64;
    constexpr uint64_t mu2_2 = 11440902846695930167ui64;
    constexpr int32_t rs2_2 = 28;
    constexpr uint64_t ma3_2 = 7382582355823960700ui64;
    constexpr uint64_t mu3_2 = 12384139700208107928ui64;
    constexpr int32_t rs3_2 = 62;
    constexpr uint64_t ma4_2 = 4213153148883017606ui64;
    constexpr uint64_t mu4_2 = 6419518309201054923ui64;
    constexpr int32_t rs4_2 = 15;
    constexpr uint64_t ma5_2 = 16409341443930045206ui64;
    constexpr uint64_t mu5_2 = 41267373614188232ui64;
    constexpr int32_t rs5_2 = 63;
    constexpr uint64_t ma6_2 = 1442120100379507232ui64;
    constexpr uint64_t mu6_2 = 16568410642984456200ui64;
    constexpr int32_t rs6_2 = 1;
    constexpr uint64_t ma7_2 = 15483678027066180508ui64;
    constexpr uint64_t mu7_2 = 7813585445585429376ui64;
    constexpr int32_t rs7_2 = 46;
    constexpr uint64_t ma2 = 6486440088087085989ui64;
    constexpr uint64_t ma0_3 = 7931110105937949904ui64;
    constexpr uint64_t mu0_3 = 16130615638914859625ui64;
    constexpr int32_t rs0_3 = 43;
    constexpr uint64_t ma1_3 = 1721093374363793678ui64;
    constexpr uint64_t mu1_3 = 9889718734675374489ui64;
    constexpr int32_t rs1_3 = 12;
    constexpr uint64_t ma2_3 = 3121995408153066669ui64;
    constexpr uint64_t mu2_3 = 18261718338119466863ui64;
    constexpr int32_t rs2_3 = 20;
    constexpr uint64_t ma3_3 = 16776298005772065397ui64;
    constexpr uint64_t mu3_3 = 7606119135402913709ui64;
    constexpr int32_t rs3_3 = 33;
    constexpr uint64_t ma4_3 = 7045055735400668530ui64;
    constexpr uint64_t mu4_3 = 2833922428938929812ui64;
    constexpr int32_t rs4_3 = 5;
    constexpr uint64_t ma5_3 = 5698524160119151859ui64;
    constexpr uint64_t mu5_3 = 2441620600215279283ui64;
    constexpr int32_t rs5_3 = 44;
    constexpr uint64_t ma6_3 = 10388599226229773991ui64;
    constexpr uint64_t mu6_3 = 14841895025755377935ui64;
    constexpr int32_t rs6_3 = 18;
    constexpr uint64_t ma7_3 = 50814584995642827ui64;
    constexpr uint64_t mu7_3 = 12669239348241861158ui64;
    constexpr int32_t rs7_3 = 62;
    constexpr uint64_t ma3 = 36533729451226401ui64;
    constexpr uint64_t ma0_4 = 7769648344889321902ui64;
    constexpr uint64_t mu0_4 = 6719593575951400159ui64;
    constexpr int32_t rs0_4 = 52;
    constexpr uint64_t ma1_4 = 16667893438337035928ui64;
    constexpr uint64_t mu1_4 = 5643697161767740216ui64;
    constexpr int32_t rs1_4 = 21;
    constexpr uint64_t ma2_4 = 2422056516102050578ui64;
    constexpr uint64_t mu2_4 = 5624381846917391720ui64;
    constexpr int32_t rs2_4 = 9;
    constexpr uint64_t ma3_4 = 715310085572417482ui64;
    constexpr uint64_t mu3_4 = 18050019097283149162ui64;
    constexpr int32_t rs3_4 = 30;
    constexpr uint64_t ma4_4 = 10890696585209917277ui64;
    constexpr uint64_t mu4_4 = 17399799194861695793ui64;
    constexpr int32_t rs4_4 = 8;
    constexpr uint64_t ma5_4 = 217758054523970482ui64;
    constexpr uint64_t mu5_4 = 2139211161865496455ui64;
    constexpr int32_t rs5_4 = 54;
    constexpr uint64_t ma6_4 = 2319433539617594606ui64;
    constexpr uint64_t mu6_4 = 8495861130721742836ui64;
    constexpr int32_t rs6_4 = 9;
    constexpr uint64_t ma7_4 = 10735204932512081852ui64;
    constexpr uint64_t mu7_4 = 15675992554928518547ui64;
    constexpr int32_t rs7_4 = 40;
    constexpr uint64_t ma4 = 17488804270473128525ui64;
    constexpr uint64_t ma0_5 = 8409777159202795377ui64;
    constexpr uint64_t mu0_5 = 2240175508249892873ui64;
    constexpr int32_t rs0_5 = 39;
    constexpr uint64_t ma1_5 = 4099243302094371155ui64;
    constexpr uint64_t mu1_5 = 5064106307423205780ui64;
    constexpr int32_t rs1_5 = 33;
    constexpr uint64_t ma2_5 = 14703814102875586029ui64;
    constexpr uint64_t mu2_5 = 14236344727870786454ui64;
    constexpr int32_t rs2_5 = 43;
    constexpr uint64_t ma3_5 = 6180922615959991353ui64;
    constexpr uint64_t mu3_5 = 15849674236347775477ui64;
    constexpr int32_t rs3_5 = 33;
    constexpr uint64_t ma4_5 = 10010239792943098849ui64;
    constexpr uint64_t mu4_5 = 16297743012779279225ui64;
    constexpr int32_t rs4_5 = 53;
    constexpr uint64_t ma5_5 = 11013326740135622503ui64;
    constexpr uint64_t mu5_5 = 1981612376231388212ui64;
    constexpr int32_t rs5_5 = 37;
    constexpr uint64_t ma6_5 = 4389898503433128460ui64;
    constexpr uint64_t mu6_5 = 8291613624767372827ui64;
    constexpr int32_t rs6_5 = 7;
    constexpr uint64_t ma7_5 = 6848915588397469580ui64;
    constexpr uint64_t mu7_5 = 14811073536335666868ui64;
    constexpr int32_t rs7_5 = 50;
    constexpr uint64_t ma5 = 12125252131304723358ui64;
    constexpr uint64_t ma0_6 = 17864976140368476951ui64;
    constexpr uint64_t mu0_6 = 15217296133626234560ui64;
    constexpr int32_t rs0_6 = 62;
    constexpr uint64_t ma1_6 = 9182229376674914826ui64;
    constexpr uint64_t mu1_6 = 6469813247089493888ui64;
    constexpr int32_t rs1_6 = 61;
    constexpr uint64_t ma2_6 = 8663929439844394670ui64;
    constexpr uint64_t mu2_6 = 17244777601305696953ui64;
    constexpr int32_t rs2_6 = 3;
    constexpr uint64_t ma3_6 = 1667106971580064845ui64;
    constexpr uint64_t mu3_6 = 2739099964009266811ui64;
    constexpr int32_t rs3_6 = 17;
    constexpr uint64_t ma4_6 = 5203986282292478866ui64;
    constexpr uint64_t mu4_6 = 5526618712335829193ui64;
    constexpr int32_t rs4_6 = 59;
    constexpr uint64_t ma5_6 = 12654948292449496881ui64;
    constexpr uint64_t mu5_6 = 16379451066154048227ui64;
    constexpr int32_t rs5_6 = 3;
    constexpr uint64_t ma6_6 = 17005439815877464284ui64;
    constexpr uint64_t mu6_6 = 8541802531956039773ui64;
    constexpr int32_t rs6_6 = 62;
    constexpr uint64_t ma7_6 = 16383677763405200981ui64;
    constexpr uint64_t mu7_6 = 10691059098749371610ui64;
    constexpr int32_t rs7_6 = 59;
    constexpr uint64_t ma6 = 2289467188996704007ui64;
    constexpr uint64_t ma0_7 = 1573087975432277044ui64;
    constexpr uint64_t mu0_7 = 2344590706983313218ui64;
    constexpr int32_t rs0_7 = 37;
    constexpr uint64_t ma1_7 = 9313937166170496032ui64;
    constexpr uint64_t mu1_7 = 8265538379617492786ui64;
    constexpr int32_t rs1_7 = 32;
    constexpr uint64_t ma2_7 = 16719879346624491906ui64;
    constexpr uint64_t mu2_7 = 14164967136155618307ui64;
    constexpr int32_t rs2_7 = 57;
    constexpr uint64_t ma3_7 = 12112761320318496138ui64;
    constexpr uint64_t mu3_7 = 4446336629818577490ui64;
    constexpr int32_t rs3_7 = 51;
    constexpr uint64_t ma4_7 = 13359315104411966335ui64;
    constexpr uint64_t mu4_7 = 9697286295142348929ui64;
    constexpr int32_t rs4_7 = 5;
    constexpr uint64_t ma5_7 = 4535841268649535854ui64;
    constexpr uint64_t mu5_7 = 10772692795088076905ui64;
    constexpr int32_t rs5_7 = 48;
    constexpr uint64_t ma6_7 = 985620729041808384ui64;
    constexpr uint64_t mu6_7 = 4140946736750231064ui64;
    constexpr int32_t rs6_7 = 37;
    constexpr uint64_t ma7_7 = 2503619224970241324ui64;
    constexpr uint64_t mu7_7 = 17547658161802875923ui64;
    constexpr int32_t rs7_7 = 56;
    constexpr uint64_t ma7 = 11942222473112505190ui64;

    uint64_t t0_0 = (ma0_0 ^ c[0]) * mu0_0;
    uint64_t t0_1 = (ma0_1 ^ c[0]) * mu0_1;
    uint64_t t0_2 = (ma0_2 ^ c[0]) * mu0_2;
    uint64_t t0_3 = (ma0_3 ^ c[0]) * mu0_3;
    uint64_t t0_4 = (ma0_4 ^ c[0]) * mu0_4;
    uint64_t t0_5 = (ma0_5 ^ c[0]) * mu0_5;
    uint64_t t0_6 = (ma0_6 ^ c[0]) * mu0_6;
    uint64_t t0_7 = (ma0_7 ^ c[0]) * mu0_7;
    uint64_t t1_0 = (ma1_0 ^ c[1]) * mu1_0;
    uint64_t t1_1 = (ma1_1 ^ c[1]) * mu1_1;
    uint64_t t1_2 = (ma1_2 ^ c[1]) * mu1_2;
    uint64_t t1_3 = (ma1_3 ^ c[1]) * mu1_3;
    uint64_t t1_4 = (ma1_4 ^ c[1]) * mu1_4;
    uint64_t t1_5 = (ma1_5 ^ c[1]) * mu1_5;
    uint64_t t1_6 = (ma1_6 ^ c[1]) * mu1_6;
    uint64_t t1_7 = (ma1_7 ^ c[1]) * mu1_7;
    uint64_t t2_0 = (ma2_0 ^ c[2]) * mu2_0;
    uint64_t t2_1 = (ma2_1 ^ c[2]) * mu2_1;
    uint64_t t2_2 = (ma2_2 ^ c[2]) * mu2_2;
    uint64_t t2_3 = (ma2_3 ^ c[2]) * mu2_3;
    uint64_t t2_4 = (ma2_4 ^ c[2]) * mu2_4;
    uint64_t t2_5 = (ma2_5 ^ c[2]) * mu2_5;
    uint64_t t2_6 = (ma2_6 ^ c[2]) * mu2_6;
    uint64_t t2_7 = (ma2_7 ^ c[2]) * mu2_7;
    uint64_t t3_0 = (ma3_0 ^ c[3]) * mu3_0;
    uint64_t t3_1 = (ma3_1 ^ c[3]) * mu3_1;
    uint64_t t3_2 = (ma3_2 ^ c[3]) * mu3_2;
    uint64_t t3_3 = (ma3_3 ^ c[3]) * mu3_3;
    uint64_t t3_4 = (ma3_4 ^ c[3]) * mu3_4;
    uint64_t t3_5 = (ma3_5 ^ c[3]) * mu3_5;
    uint64_t t3_6 = (ma3_6 ^ c[3]) * mu3_6;
    uint64_t t3_7 = (ma3_7 ^ c[3]) * mu3_7;
    uint64_t t4_0 = (ma4_0 ^ c[4]) * mu4_0;
    uint64_t t4_1 = (ma4_1 ^ c[4]) * mu4_1;
    uint64_t t4_2 = (ma4_2 ^ c[4]) * mu4_2;
    uint64_t t4_3 = (ma4_3 ^ c[4]) * mu4_3;
    uint64_t t4_4 = (ma4_4 ^ c[4]) * mu4_4;
    uint64_t t4_5 = (ma4_5 ^ c[4]) * mu4_5;
    uint64_t t4_6 = (ma4_6 ^ c[4]) * mu4_6;
    uint64_t t4_7 = (ma4_7 ^ c[4]) * mu4_7;
    uint64_t t5_0 = (ma5_0 ^ c[5]) * mu5_0;
    uint64_t t5_1 = (ma5_1 ^ c[5]) * mu5_1;
    uint64_t t5_2 = (ma5_2 ^ c[5]) * mu5_2;
    uint64_t t5_3 = (ma5_3 ^ c[5]) * mu5_3;
    uint64_t t5_4 = (ma5_4 ^ c[5]) * mu5_4;
    uint64_t t5_5 = (ma5_5 ^ c[5]) * mu5_5;
    uint64_t t5_6 = (ma5_6 ^ c[5]) * mu5_6;
    uint64_t t5_7 = (ma5_7 ^ c[5]) * mu5_7;
    uint64_t t6_0 = (ma6_0 ^ c[6]) * mu6_0;
    uint64_t t6_1 = (ma6_1 ^ c[6]) * mu6_1;
    uint64_t t6_2 = (ma6_2 ^ c[6]) * mu6_2;
    uint64_t t6_3 = (ma6_3 ^ c[6]) * mu6_3;
    uint64_t t6_4 = (ma6_4 ^ c[6]) * mu6_4;
    uint64_t t6_5 = (ma6_5 ^ c[6]) * mu6_5;
    uint64_t t6_6 = (ma6_6 ^ c[6]) * mu6_6;
    uint64_t t6_7 = (ma6_7 ^ c[6]) * mu6_7;
    uint64_t t7_0 = (ma7_0 ^ c[7]) * mu7_0;
    uint64_t t7_1 = (ma7_1 ^ c[7]) * mu7_1;
    uint64_t t7_2 = (ma7_2 ^ c[7]) * mu7_2;
    uint64_t t7_3 = (ma7_3 ^ c[7]) * mu7_3;
    uint64_t t7_4 = (ma7_4 ^ c[7]) * mu7_4;
    uint64_t t7_5 = (ma7_5 ^ c[7]) * mu7_5;
    uint64_t t7_6 = (ma7_6 ^ c[7]) * mu7_6;
    uint64_t t7_7 = (ma7_7 ^ c[7]) * mu7_7;

    t0_0 = ((t0_0 << rs0_0) | (t0_0 >> (64 - rs0_0)));
    t0_1 = ((t0_1 << rs0_1) | (t0_1 >> (64 - rs0_1)));
    t0_2 = ((t0_2 << rs0_2) | (t0_2 >> (64 - rs0_2)));
    t0_3 = ((t0_3 << rs0_3) | (t0_3 >> (64 - rs0_3)));
    t0_4 = ((t0_4 << rs0_4) | (t0_4 >> (64 - rs0_4)));
    t0_5 = ((t0_5 << rs0_5) | (t0_5 >> (64 - rs0_5)));
    t0_6 = ((t0_6 << rs0_6) | (t0_6 >> (64 - rs0_6)));
    t0_7 = ((t0_7 << rs0_7) | (t0_7 >> (64 - rs0_7)));
    t1_0 = ((t1_0 << rs1_0) | (t1_0 >> (64 - rs1_0)));
    t1_1 = ((t1_1 << rs1_1) | (t1_1 >> (64 - rs1_1)));
    t1_2 = ((t1_2 << rs1_2) | (t1_2 >> (64 - rs1_2)));
    t1_3 = ((t1_3 << rs1_3) | (t1_3 >> (64 - rs1_3)));
    t1_4 = ((t1_4 << rs1_4) | (t1_4 >> (64 - rs1_4)));
    t1_5 = ((t1_5 << rs1_5) | (t1_5 >> (64 - rs1_5)));
    t1_6 = ((t1_6 << rs1_6) | (t1_6 >> (64 - rs1_6)));
    t1_7 = ((t1_7 << rs1_7) | (t1_7 >> (64 - rs1_7)));
    t2_0 = ((t2_0 << rs2_0) | (t2_0 >> (64 - rs2_0)));
    t2_1 = ((t2_1 << rs2_1) | (t2_1 >> (64 - rs2_1)));
    t2_2 = ((t2_2 << rs2_2) | (t2_2 >> (64 - rs2_2)));
    t2_3 = ((t2_3 << rs2_3) | (t2_3 >> (64 - rs2_3)));
    t2_4 = ((t2_4 << rs2_4) | (t2_4 >> (64 - rs2_4)));
    t2_5 = ((t2_5 << rs2_5) | (t2_5 >> (64 - rs2_5)));
    t2_6 = ((t2_6 << rs2_6) | (t2_6 >> (64 - rs2_6)));
    t2_7 = ((t2_7 << rs2_7) | (t2_7 >> (64 - rs2_7)));
    t3_0 = ((t3_0 << rs3_0) | (t3_0 >> (64 - rs3_0)));
    t3_1 = ((t3_1 << rs3_1) | (t3_1 >> (64 - rs3_1)));
    t3_2 = ((t3_2 << rs3_2) | (t3_2 >> (64 - rs3_2)));
    t3_3 = ((t3_3 << rs3_3) | (t3_3 >> (64 - rs3_3)));
    t3_4 = ((t3_4 << rs3_4) | (t3_4 >> (64 - rs3_4)));
    t3_5 = ((t3_5 << rs3_5) | (t3_5 >> (64 - rs3_5)));
    t3_6 = ((t3_6 << rs3_6) | (t3_6 >> (64 - rs3_6)));
    t3_7 = ((t3_7 << rs3_7) | (t3_7 >> (64 - rs3_7)));
    t4_0 = ((t4_0 << rs4_0) | (t4_0 >> (64 - rs4_0)));
    t4_1 = ((t4_1 << rs4_1) | (t4_1 >> (64 - rs4_1)));
    t4_2 = ((t4_2 << rs4_2) | (t4_2 >> (64 - rs4_2)));
    t4_3 = ((t4_3 << rs4_3) | (t4_3 >> (64 - rs4_3)));
    t4_4 = ((t4_4 << rs4_4) | (t4_4 >> (64 - rs4_4)));
    t4_5 = ((t4_5 << rs4_5) | (t4_5 >> (64 - rs4_5)));
    t4_6 = ((t4_6 << rs4_6) | (t4_6 >> (64 - rs4_6)));
    t4_7 = ((t4_7 << rs4_7) | (t4_7 >> (64 - rs4_7)));
    t5_0 = ((t5_0 << rs5_0) | (t5_0 >> (64 - rs5_0)));
    t5_1 = ((t5_1 << rs5_1) | (t5_1 >> (64 - rs5_1)));
    t5_2 = ((t5_2 << rs5_2) | (t5_2 >> (64 - rs5_2)));
    t5_3 = ((t5_3 << rs5_3) | (t5_3 >> (64 - rs5_3)));
    t5_4 = ((t5_4 << rs5_4) | (t5_4 >> (64 - rs5_4)));
    t5_5 = ((t5_5 << rs5_5) | (t5_5 >> (64 - rs5_5)));
    t5_6 = ((t5_6 << rs5_6) | (t5_6 >> (64 - rs5_6)));
    t5_7 = ((t5_7 << rs5_7) | (t5_7 >> (64 - rs5_7)));
    t6_0 = ((t6_0 << rs6_0) | (t6_0 >> (64 - rs6_0)));
    t6_1 = ((t6_1 << rs6_1) | (t6_1 >> (64 - rs6_1)));
    t6_2 = ((t6_2 << rs6_2) | (t6_2 >> (64 - rs6_2)));
    t6_3 = ((t6_3 << rs6_3) | (t6_3 >> (64 - rs6_3)));
    t6_4 = ((t6_4 << rs6_4) | (t6_4 >> (64 - rs6_4)));
    t6_5 = ((t6_5 << rs6_5) | (t6_5 >> (64 - rs6_5)));
    t6_6 = ((t6_6 << rs6_6) | (t6_6 >> (64 - rs6_6)));
    t6_7 = ((t6_7 << rs6_7) | (t6_7 >> (64 - rs6_7)));
    t7_0 = ((t7_0 << rs7_0) | (t7_0 >> (64 - rs7_0)));
    t7_1 = ((t7_1 << rs7_1) | (t7_1 >> (64 - rs7_1)));
    t7_2 = ((t7_2 << rs7_2) | (t7_2 >> (64 - rs7_2)));
    t7_3 = ((t7_3 << rs7_3) | (t7_3 >> (64 - rs7_3)));
    t7_4 = ((t7_4 << rs7_4) | (t7_4 >> (64 - rs7_4)));
    t7_5 = ((t7_5 << rs7_5) | (t7_5 >> (64 - rs7_5)));
    t7_6 = ((t7_6 << rs7_6) | (t7_6 >> (64 - rs7_6)));
    t7_7 = ((t7_7 << rs7_7) | (t7_7 >> (64 - rs7_7)));

    c[0] = t0_0 ^ t1_0 ^ t2_0 ^ t3_0 ^ t4_0 ^ t5_0 ^ t6_0 ^ t7_0 ^ ma0;
    c[1] = t0_1 ^ t1_1 ^ t2_1 ^ t3_1 ^ t4_1 ^ t5_1 ^ t6_1 ^ t7_1 ^ ma1;
    c[2] = t0_2 ^ t1_2 ^ t2_2 ^ t3_2 ^ t4_2 ^ t5_2 ^ t6_2 ^ t7_2 ^ ma2;
    c[3] = t0_3 ^ t1_3 ^ t2_3 ^ t3_3 ^ t4_3 ^ t5_3 ^ t6_3 ^ t7_3 ^ ma3;
    c[4] = t0_4 ^ t1_4 ^ t2_4 ^ t3_4 ^ t4_4 ^ t5_4 ^ t6_4 ^ t7_4 ^ ma4;
    c[5] = t0_5 ^ t1_5 ^ t2_5 ^ t3_5 ^ t4_5 ^ t5_5 ^ t6_5 ^ t7_5 ^ ma5;
    c[6] = t0_6 ^ t1_6 ^ t2_6 ^ t3_6 ^ t4_6 ^ t5_6 ^ t6_6 ^ t7_6 ^ ma6;
    c[7] = t0_7 ^ t1_7 ^ t2_7 ^ t3_7 ^ t4_7 ^ t5_7 ^ t6_7 ^ t7_7 ^ ma7;
}

__device__ float BrendanCUDA::DeviceRandom::GetF() {
    Iterate();

    uint64_t v = c[7];
    uint32_t v0 = *(uint32_t*)&v;
    uint32_t v1 = ((uint32_t*)&v)[1];

    uint32_t e;
    if (v0 >> 31) {
        e = 126ui32;
    }
    else if (v0 >> 30) {
        e = 125ui32;
    }
    else if (v0 >> 29) {
        e = 124ui32;
    }
    else if (v0 >> 28) {
        e = 123ui32;
    }
    else {
        for (uint32_t i = 27; i <= 27; --i) {
            if (v0 >> i) {
                e = i + 95ui32;
                goto ae;
            }
        }
        e = 94ui32;
    }
ae:
    uint32_t r = (e << 23) | (v1 >> 9);
    return *(float*)&r;
}
__device__ double BrendanCUDA::DeviceRandom::GetD() {
    Iterate();

    uint64_t v0 = c[6];
    uint64_t v1 = c[7];

    uint64_t e;
    if (v0 >> 63) {
        e = 1023ui64;
    }
    else if (v0 >> 62) {
        e = 1022ui64;
    }
    else if (v0 >> 61) {
        e = 1021ui64;
    }
    else if (v0 >> 60) {
        e = 1020ui64;
    }
    else {
        for (uint32_t i = 59; i <= 59; --i) {
            if (v0 >> i) {
                e = i + 960ui32;
                goto ae;
            }
        }
        e = 959ui32;
    }
ae:
    uint32_t r = (e << 52) | (v1 >> 12);
    return *(double*)&r;
}

__device__ uint8_t BrendanCUDA::DeviceRandom::GetI8() {
    Iterate();
    return *(uint8_t*)&c[7];
}
__device__ uint16_t BrendanCUDA::DeviceRandom::GetI16() {
    Iterate();
    return *(uint16_t*)&c[7];
}
__device__ uint32_t BrendanCUDA::DeviceRandom::GetI32() {
    Iterate();
    return *(uint32_t*)&c[7];
}
__device__ uint64_t BrendanCUDA::DeviceRandom::GetI64() {
    Iterate();
    return c[7];
}
__device__ uint64_t BrendanCUDA::DeviceRandom::operator()() {
    return GetI64();
}